---
import DarkModeIcon from './icons/DarkMode.astro';
import LightModeIcon from './icons/LightMode.astro';
---

<div class="theme-toggle-button">
  <span class="theme-toggle-icon" data-theme="dark">
    <DarkModeIcon
      class={`
        h-6
        cursor-pointer
        transition
        hover:scale-110
        md:h-7
        text-primary
      `}
    />
  </span>
  <span class="theme-toggle-icon" data-theme="light">
    <LightModeIcon
      class={`
        h-6
        cursor-pointer
        transition
        hover:scale-110
        md:h-7
        text-white
      `}
    />
  </span>
</div>

<script is:inline>
  if (typeof themeToggleExecuted === 'undefined') {
    const getThemePreference = () => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }

      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    };

    const updateIcon = themePreference => {
      document.querySelectorAll('.theme-toggle-icon').forEach(element => {
        element.style.display = element.dataset.theme === themePreference ? 'none' : 'block';
      });
    };

    const updateTheme = () => {
      const themePreference = getThemePreference();
      const isDark = themePreference === 'dark';

      updateIcon(themePreference);
      document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
    };

    updateTheme();

    const matchMedia = window.matchMedia('(prefers-color-scheme: dark)');
    matchMedia.addEventListener('change', updateTheme);

    document.querySelectorAll('.theme-toggle-button').forEach(element => {
      element.addEventListener('click', e => {
        const parent = e.target.closest('.theme-toggle-icon');
        localStorage.setItem('theme', parent.dataset.theme);

        updateTheme();
      });
    });

    let themeToggleExecuted = true;
  }
</script>
